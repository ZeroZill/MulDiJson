plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id "com.github.ben-manes.versions" version '0.28.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

ext {
    jacksonVersion = '2.12.1'
    jmhVersion = '1.25'
}

dependencies {

    // CLI and misc
    compile group: 'io.airlift', name: 'airline', version: '0.9'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

    // FastJson
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.73'
    // GSON
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    // org.json
    compile group: 'org.json', name: 'json', version: '20201115'
    // LoganSquare
    compile group: 'com.bluelinelabs', name: 'logansquare', version: '1.3.7'
    annotationProcessor group: 'com.bluelinelabs', name: 'logansquare-compiler', version: '1.3.7'
    // genson
    compile group: 'com.owlike', name: 'genson', version: '1.6'
    // Jackson
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonVersion}"
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-afterburner', version: "${jacksonVersion}"
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: "${jacksonVersion}"
    // minimal-json
    compile group: 'com.eclipsesource.minimal-json', name: 'minimal-json', version: '0.9.5'
    // moshi
    compile group: 'com.squareup.moshi', name: 'moshi', version: '1.11.0'
    // klaxon
    implementation 'com.beust:klaxon:5.0.1'

    // FlexJson
    compile group: 'net.sf.flexjson', name: 'flexjson', version: '3.3'

    // Test
    testCompile group: 'junit', name: 'junit', version: '4.13'

    // log4j
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'

    // Javers
    compile group: 'org.javers', name: 'javers-core', version: '5.15.0'

    // Apache Commons Cli
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'

    // groovy-all
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.7'


    // IMPORTANT: Leave JMH at the end!
    // JMH
    compile group: 'org.openjdk.jmh', name: 'jmh-core', version: "${jmhVersion}"
    annotationProcessor group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: "${jmhVersion}"
}

shadowJar {
    archiveName = 'app.jar'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

test {
    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}

task (depsize) {
    doLast {
        def size = 0
        def formatStr = "%,10.2f"
        configurations.default.collect { it.length() / (1024 * 1024) }.each { size += it }

        def out = new StringBuffer()
        out << 'Total dependencies size:'.padRight(45)
        out << "${String.format(formatStr, size)} MiB\n\n"

        configurations
                .default
                .sort { -it.length() }
                .each {
                    out << "${it.name}".padRight(45)
                    out << "${String.format(formatStr, (it.length() / 1024))} KiB\n"
                }
        println(out)
    }
}